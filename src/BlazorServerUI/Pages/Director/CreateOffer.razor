@page "/createOffer"
@attribute [Authorize(Roles="Director")]

@using BLL.DTOs.People.Director
@using BLL.DTOs.Objects.InsuranceOffer
@using BlazorServerUI.Authentication.Utility

<MudGrid Style="padding: 20px 20px" Spacing="4">
    <MudItem xs="12">
        <MudText Typo="Typo.h4">Create Insurance Offer</MudText>

    </MudItem>
    <MudItem xs="12">
        <MudDatePicker @bind-Value="CreateDate" Label="Creation date"/>

    </MudItem>
    <MudItem xs="12">
        <MudDatePicker @bind-Value="ExpirationDate" Label="Expiration date"/>

    </MudItem>
    <MudItem xs="12">
        <MudTextField T="string" @bind-Value="Description" Label="Description" Variant="Variant.Text" Lines="8"/>

    </MudItem>
    <MudItem xs="12">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="CreateOfferAsync">Create Offer</MudButton>

    </MudItem>

</MudGrid>

@inject BLL.Facades.Insurance.IInsuranceFacade _facade

@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationStateTask { get; set; }

    private int id;
    
    private string CreateDate { get; set; }
    private string ExpirationDate { get; set; }
    private string Description { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        id = CustomClaimsUtility.ExtractClaimsId((await AuthenticationStateTask).User);
    }

    private async Task CreateOfferAsync()
    {
        var offer = new InsuranceOfferCreateDTO()
        {
            CreationDate = Convert.ToDateTime(CreateDate),
            ExpirationDate = Convert.ToDateTime(ExpirationDate),
            DirectorId = id,
            Description = Description
        };

        await _facade.CreateInsuranceOfferAsync(offer);
    }
}
